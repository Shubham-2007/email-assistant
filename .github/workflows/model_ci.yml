name: Model Training and Deployment CI/CD

on:
  push:
    branches:
      - main
    paths:
      - "model_pipeline/**"
  workflow_dispatch: # Allow manual trigger via GitHub UI

jobs:
  train-and-validate:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

        # Install Docker Compose manually
      - name: Set up Docker Compose
        run: |
          sudo curl -L "https://github.com/docker/compose/releases/download/1.29.2/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
          sudo chmod +x /usr/local/bin/docker-compose
          docker-compose --version

      - name: Build Docker Compose services
        run: |
          cd model_pipeline && docker-compose up --build

      - name: Check Docker containers status
        run: |
          docker-compose ps

      - name: Shut down Docker Compose services
        run: |
          docker-compose down

      # - name: Set up Python
      #   uses: actions/setup-python@v4
      #   with:
      #     python-version: '3.11'

      # - name: Install Dependencies
      #   run: |
      #     pip install -r requirements.txt
      #     python -m spacy download en_core_web_sm  # Required for validation

      # - name: Train Model
      #   run: |
      #     python model_pipeline/main.py

      # - name: Validate Model
      #   run: |
      #     python model_pipeline/validation.py

      # - name: Check for Bias
      #   run: |
      #     python model_pipeline/bias_checker.py

      # - name: Register Model in MLflow
      #   run: |
      #     export MLFLOW_TRACKING_URI=https://mlflow.yourserver.com
      #     mlflow models serve -m "runs:/latest/model" --port 5000

      # - name: Deploy Model (if applicable)
      #   run: |
      #     python model_pipeline/deploy.py  # Implement deployment logic

      # - name: Notify Slack on Success
      #   uses: rtCamp/action-slack-notify@v2
      #   env:
      #     SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
      #   with:
      #     message: "ðŸš€ Model training and validation completed successfully!"
